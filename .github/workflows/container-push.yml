#
name: Container Push

on:
  push:
    branches:
      - main
  pull_request:
  # This creates an environment variable called `IMAGE_NAME ` with the value `ghtoken_product_demo`.
env:
  IMAGE_NAME: marvin2
#
jobs:
  # This pushes the image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build and push x86-64 image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME-x86-64 --label "runnumber=${GITHUB_RUN_ID}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME-x86-64:latest

      - name: Build and push ARM64 image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME-arm64 --label "runnumber=${GITHUB_RUN_ID}" --build-arg ARCH=arm64
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME-arm64:latest

      - name: Create manifest list
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker manifest create ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME-x86-64:latest ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME-arm64:latest
          docker manifest push --purge ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest
